# custom configs
setw -g main-pane-width 200
setw -g aggressive-resize off
setw -g mode-keys vi

# -- general -------------------------------------------------------------------

#set -g default-terminal "alacritty"
set -g assume-paste-time 0
set -g history-limit 10000		# boost history
set -s escape-time 0			# faster command sequences
set -g status on
set -g pane-border-format "#P: #{pane_current_command}"
setw -g mouse on


# -- display -------------------------------------------------------------------

set -g base-index 1		# start windows numbering at 1
setw -g pane-base-index 1	# make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
#bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# -- navigation ----------------------------------------------------------------

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h


# -- custom bindings -----------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 5

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

#bind-key H resize-pane -L 5
#bind-key L resize-pane -R 5
bind j select-pane -t :.-
bind x swap-pane -t :.1 \; select-pane -t :.1
bind k kill-pane \; select-layout main-vertical
bind v split-window -v \; select-layout main-vertical \; swap-pane -t :.1 \; select-pane -t :.1
bind r run-shell "~/.config/tmux/resize-adaptable.sh -l main-vertical -p 60"
bind R source-file ~/.tmux.conf \; display-message "Config reloaded"

# -- copy mode -----------------------------------------------------------------

#bind Enter copy-mode # enter copy mode
bind c copy-mode

#run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
#run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
#run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# -- status bar ----------------------------------------------------------------

set-window-option -g window-status-format ""
set-window-option -g window-status-current-format ""

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
#set-option -g status-attr dim

# show IP addresses on left side of status bar
set -g status-left-length 120

IP_ADDR="$(ifconfig eth0 | grep 'inet ' | awk '{print \"lan \" $2}')"
VPN0_ADDR="$(ifconfig utun0 | grep 'inet ' | awk '{print \"vpn \" $2}')"
VPN1_ADDR="$(ifconfig utun1 | grep 'inet ' | awk '{print \"vpn \" $2}')"
DEFAULT_GW="$(ip route show | grep default | cut -d' ' -f 3)"

set -g status-left "#[fg=green][#P]"
set -ga status-left " #[fg=brightblue]#(curl icanhazip.com)"
set -ga status-left " #[fg=yellow]#(echo $IP_ADDR)"
set -ga status-left " #[fg=red]#(echo $VPN0_ADDR)"
set -ga status-left " #[fg=red]#(echo $VPN1_ADDR)"
set -ga status-left " #[fg=white]8.8.8.8 (#(ping -c1 8.8.8.8 | grep ttl | cut -f4 -d'='))"
set -ga status-left " #[fg=white]#(echo $DEFAULT_GW) (#(ping -c1 $DEFAULT_GW | grep ttl | cut -f4 -d'='))"

# show user info on right side of status bar

set -g status-right-length 80
set -g status-right "#[fg=yellow]%d %b %Y"
set -ga status-right " #[fg=green]%H:%M"
set -ga status-right ' #[fg=red]#(~/.config/tmux/ssh-utils.sh _username #{pane_tty} false #D)'
set -ga status-right ' #[fg=red]#(~/.config/tmux/ssh-utils.sh _root #{pane_tty} !)'
set -ga status-right ' #[fg=blue]#(~/.config/tmux/ssh-utils.sh _hostname #{pane_tty} false #h #D)'
